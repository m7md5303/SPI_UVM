Coverage Report by instance with details

=================================================================================
=== Instance: /top_uvm/spi_if
=== Design Unit: work.spi_inter
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         10        10         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/spi_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 

Total Node Count     =          5 
Toggled Node Count   =          5 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (10 of 10 bins)

=================================================================================
=== Instance: /top_uvm/gold_if
=== Design Unit: work.golden_inter_ref
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         10        10         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/gold_if --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                         MISO_gold           1           1                              100.00 
                                         MOSI_gold           1           1                              100.00 
                                         SS_n_gold           1           1                              100.00 
                                               clk           1           1                              100.00 
                                        rst_n_gold           1           1                              100.00 

Total Node Count     =          5 
Toggled Node Count   =          5 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (10 of 10 bins)

=================================================================================
=== Instance: /top_uvm/DUT/R
=== Design Unit: work.SPI_RAM
=================================================================================

Assertion Coverage:
    Assertions                       3         3         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top_uvm/DUT/R/assert__assertion3
                     SPI_RAM.sv(57)                     0          1
/top_uvm/DUT/R/assert__assertion2
                     SPI_RAM.sv(56)                     0          1
/top_uvm/DUT/R/assert__assertion1
                     SPI_RAM.sv(55)                     0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         8         1         7    12.50%

================================Branch Details================================

Branch Coverage for instance /top_uvm/DUT/R

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM.sv
------------------------------------IF Branch------------------------------------
    14                                         2     Count coming in to IF
    14              1                          2     	if (~rst_n) begin
    18              1                    ***0***     	else if (rx_valid) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 3 branches = 33.33%

------------------------------------CASE Branch------------------------------------
    19                                   ***0***     Count coming in to CASE
    20              1                    ***0***     		  2'b00 : begin
    25              1                    ***0***     		  2'b01: begin
    30              1                    ***0***     		  2'b10: begin
    35              1                    ***0***     		  2'b11: begin
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%



Directive Coverage:
    Directives                       3         3         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top_uvm/DUT/R/cover__assertion3         SPI_RAM Verilog  SVA  SPI_RAM.sv(61)    11 Covered   
/top_uvm/DUT/R/cover__assertion2         SPI_RAM Verilog  SVA  SPI_RAM.sv(60)    17 Covered   
/top_uvm/DUT/R/cover__assertion1         SPI_RAM Verilog  SVA  SPI_RAM.sv(59)    11 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       8         3         5    37.50%

================================Statement Details================================

Statement Coverage for instance /top_uvm/DUT/R --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_RAM.sv
    1                                                module SPI_RAM (din, dout ,rx_valid, tx_valid , clk, rst_n);
    2                                                parameter MEM_DEPTH=256;
    3                                                parameter ADDR_SIZE=8;
    4                                                input clk, rst_n, rx_valid;
    5                                                input [9:0] din;
    6                                                output  reg tx_valid;
    7                                                output reg [ADDR_SIZE-1:0] dout; 
    8                                                
    9                                                
    10                                               reg [ADDR_SIZE-1:0]  read_address; //buses to hold write or read addresses 
    11                                               reg [ADDR_SIZE-1:0] memory [MEM_DEPTH-1:0]; 
    12                                               
    13              1                          2     always @(posedge clk or negedge rst_n) begin
    14                                               	if (~rst_n) begin
    15              1                          2     		dout<=0;
    16              1                          2     		tx_valid<=0;
    17                                               	end
    18                                               	else if (rx_valid) begin
    19                                               		case ( din [9:8])
    20                                               		  2'b00 : begin
    21              1                    ***0***     		  read_address<= din[ADDR_SIZE-1:0];
    22                                               		
    23                                               
    24                                                         end 
    25                                               		  2'b01: begin
    26              1                    ***0***     		    memory[read_address] <= din [ADDR_SIZE-1:0];
    27                                                           	
    28                                               		     
    29                                                         end
    30                                               		  2'b10: begin
    31              1                    ***0***     		    read_address<= din [ADDR_SIZE-1:0];
    32                                                            		
    33                                               		     
    34                                                         end
    35                                               		  2'b11: begin
    36              1                    ***0***     		    dout<= memory[read_address];
    37              1                    ***0***     		    tx_valid<=1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         60        59         1    98.33%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/DUT/R --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[7-0]           1           1                              100.00 
                                 read_address[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           0           1                               50.00 

Total Node Count     =         30 
Toggled Node Count   =         29 
Untoggled Node Count =          1 

Toggle Coverage      =      98.33% (59 of 60 bins)

=================================================================================
=== Instance: /top_uvm/DUT/S
=== Design Unit: work.SPI_SLAVE
=================================================================================

Assertion Coverage:
    Assertions                       9         9         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top_uvm/DUT/S/assert__assertion9
                     SPI_SLAVE.sv(205)                  0          1
/top_uvm/DUT/S/assert__assertion8
                     SPI_SLAVE.sv(204)                  0          1
/top_uvm/DUT/S/assert__assertion7
                     SPI_SLAVE.sv(203)                  0          1
/top_uvm/DUT/S/assert__assertion6
                     SPI_SLAVE.sv(202)                  0          1
/top_uvm/DUT/S/assert__assertion5
                     SPI_SLAVE.sv(201)                  0          1
/top_uvm/DUT/S/assert__assertion4
                     SPI_SLAVE.sv(200)                  0          1
/top_uvm/DUT/S/assert__assertion3
                     SPI_SLAVE.sv(199)                  0          1
/top_uvm/DUT/S/assert__assertion2
                     SPI_SLAVE.sv(198)                  0          1
/top_uvm/DUT/S/assert__assertion1
                     SPI_SLAVE.sv(197)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        55        16        39    29.09%

================================Branch Details================================

Branch Coverage for instance /top_uvm/DUT/S

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
------------------------------------IF Branch------------------------------------
    23                                         2     Count coming in to IF
    23              1                          2       if(~rst_n) begin
    27              1                    ***0***       else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------CASE Branch------------------------------------
    35                                         3     Count coming in to CASE
    36              1                          2       IDLE: begin 
    44              1                    ***0***       CHK_CMD:
    62              1                    ***0***       READ_DATA:
    70              1                    ***0***       READ_ADD:
    78              1                    ***0***       WRITE:
    85              1                          1     default:begin//missing default state
Branch totals: 2 hits of 6 branches = 33.33%

------------------------------------IF Branch------------------------------------
    38                                         2     Count coming in to IF
    38              1                          1         if(~SS_n) 
    40              1                          1         else 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    45                                   ***0***     Count coming in to IF
    45              1                    ***0***         if(~SS_n) begin
    58              1                    ***0***         else if(SS_n) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***           if(MOSI && ~rd_flag) begin
    50              1                    ***0***             else if(MOSI && rd_flag) begin
    54              1                    ***0***             else if(~MOSI) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              1                    ***0***         if(SS_n) begin
    66              1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              1                    ***0***         if(SS_n) begin
    74              1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    79                                   ***0***     Count coming in to IF
    79              1                    ***0***          if(SS_n) begin
    82              1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    93                                         2     Count coming in to IF
    93              1                          2     if(!rst_n) begin
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    96                                         2     Count coming in to IF
    96              1                          1       if(cs==IDLE) begin
    100             1                          1       else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                        1     Count coming in to IF
    101             1                    ***0***       if(counter_enable) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    105                                        1     Count coming in to IF
    105             1                    ***0***       if(cs==READ_ADD && counter_done) begin
    108             1                    ***0***       else if (cs==READ_DATA && counter_done && MISO_CountDone)begin
                                               1     All False Count
Branch totals: 1 hit of 3 branches = 33.33%

------------------------------------IF Branch------------------------------------
    112                                        1     Count coming in to IF
    112             1                    ***0***       if(MISO_CountEn&&(cs==READ_DATA)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    120                                        2     Count coming in to IF
    120             1                          2       if(~rst_n) begin
    124             1                    ***0***       else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    125                                  ***0***     Count coming in to IF
    125             1                    ***0***         if(cs==IDLE)begin
    130             1                    ***0***         else if(counter_enable) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%

------------------------------------IF Branch------------------------------------
    133                                  ***0***     Count coming in to IF
    133             1                    ***0***         if(counter_done) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    137                                  ***0***     Count coming in to IF
    137             1                    ***0***         if(counter_done&&cs==READ_DATA)begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    140                                  ***0***     Count coming in to IF
    140             1                    ***0***         if(MISO_CountEn) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    143                                  ***0***     Count coming in to IF
    143             1                    ***0***         if (MISO_CountDone) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    150                                        2     Count coming in to IF
    150             1                    ***0***     assign counter_enable=(cs != IDLE && cs!=CHK_CMD && ~counter_done && ~MISO_CountEn)?1:0;
    150             2                          2     assign counter_enable=(cs != IDLE && cs!=CHK_CMD && ~counter_done && ~MISO_CountEn)?1:0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    151                                        1     Count coming in to IF
    151             1                    ***0***     assign counter_done = (state_countout==4'b1010)?1:0;
    151             2                          1     assign counter_done = (state_countout==4'b1010)?1:0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    152                                        1     Count coming in to IF
    152             1                    ***0***     assign MISO_CountDone = (MISO_CountOut== 0)?1:0;
    152             2                          1     assign MISO_CountDone = (MISO_CountOut== 0)?1:0;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    154                                        1     Count coming in to IF
    154             1                    ***0***       if(counter_done)begin
    157             1                          1       else begin
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      21         0        21     0.00%

================================Condition Details================================

Condition Coverage for instance /top_uvm/DUT/S --

  File SPI_SLAVE.sv
----------------Focused Condition View-------------------
Line       46 Item    1  (MOSI && ~rd_flag)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        MOSI         N  No hits                  Hit '_0' and '_1'
     rd_flag         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  MOSI_0                -                             
  Row   2:    ***0***  MOSI_1                ~rd_flag                      
  Row   3:    ***0***  rd_flag_0             MOSI                          
  Row   4:    ***0***  rd_flag_1             MOSI                          

----------------Focused Condition View-------------------
Line       50 Item    1  (MOSI && rd_flag)
Condition totals: 0 of 2 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        MOSI         N  No hits                  Hit '_0' and '_1'
     rd_flag         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  MOSI_0                -                             
  Row   2:    ***0***  MOSI_1                rd_flag                       
  Row   3:    ***0***  rd_flag_0             MOSI                          
  Row   4:    ***0***  rd_flag_1             MOSI                          

----------------Focused Condition View-------------------
Line       96 Item    1  (cs == IDLE)
Condition totals: 0 of 1 input term covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (cs == IDLE)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == IDLE)_0        -                             
  Row   2:          1  (cs == IDLE)_1        -                             

----------------Focused Condition View-------------------
Line       105 Item    1  ((cs == READ_ADD) && counter_done)
Condition totals: 0 of 2 input terms covered = 0.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  (cs == READ_ADD)         N  No hits                  Hit '_0' and '_1'
      counter_done         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == READ_ADD)_0    -                             
  Row   2:    ***0***  (cs == READ_ADD)_1    counter_done                  
  Row   3:    ***0***  counter_done_0        (cs == READ_ADD)              
  Row   4:    ***0***  counter_done_1        (cs == READ_ADD)              

----------------Focused Condition View-------------------
Line       108 Item    1  (((cs == READ_DATA) && counter_done) && MISO_CountDone)
Condition totals: 0 of 3 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (cs == READ_DATA)         N  No hits                  Hit '_0' and '_1'
       counter_done         N  No hits                  Hit '_0' and '_1'
     MISO_CountDone         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == READ_DATA)_0   -                             
  Row   2:    ***0***  (cs == READ_DATA)_1   (MISO_CountDone && counter_done)
  Row   3:    ***0***  counter_done_0        (cs == READ_DATA)             
  Row   4:    ***0***  counter_done_1        (MISO_CountDone && (cs == READ_DATA))
  Row   5:    ***0***  MISO_CountDone_0      ((cs == READ_DATA) && counter_done)
  Row   6:    ***0***  MISO_CountDone_1      ((cs == READ_DATA) && counter_done)

----------------Focused Condition View-------------------
Line       112 Item    1  (MISO_CountEn && (cs == READ_DATA))
Condition totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       MISO_CountEn         N  No hits                  Hit '_0' and '_1'
  (cs == READ_DATA)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  MISO_CountEn_0        -                             
  Row   2:    ***0***  MISO_CountEn_1        (cs == READ_DATA)             
  Row   3:    ***0***  (cs == READ_DATA)_0   MISO_CountEn                  
  Row   4:    ***0***  (cs == READ_DATA)_1   MISO_CountEn                  

----------------Focused Condition View-------------------
Line       125 Item    1  (cs == IDLE)
Condition totals: 0 of 1 input term covered = 0.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (cs == IDLE)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (cs == IDLE)_0        -                             
  Row   2:    ***0***  (cs == IDLE)_1        -                             

----------------Focused Condition View-------------------
Line       137 Item    1  (counter_done && (cs == READ_DATA))
Condition totals: 0 of 2 input terms covered = 0.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
       counter_done         N  No hits                  Hit '_0' and '_1'
  (cs == READ_DATA)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  counter_done_0        -                             
  Row   2:    ***0***  counter_done_1        (cs == READ_DATA)             
  Row   3:    ***0***  (cs == READ_DATA)_0   counter_done                  
  Row   4:    ***0***  (cs == READ_DATA)_1   counter_done                  

----------------Focused Condition View-------------------
Line       150 Item    1  ((((cs != IDLE) && (cs != CHK_CMD)) && ~counter_done) && ~MISO_CountEn)
Condition totals: 0 of 4 input terms covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
     (cs != IDLE)         N  '_1' not hit             Hit '_1'
  (cs != CHK_CMD)         N  No hits                  Hit '_0' and '_1'
     counter_done         N  No hits                  Hit '_0' and '_1'
     MISO_CountEn         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs != IDLE)_0        -                             
  Row   2:    ***0***  (cs != IDLE)_1        (~MISO_CountEn && ~counter_done && (cs != CHK_CMD))
  Row   3:    ***0***  (cs != CHK_CMD)_0     (cs != IDLE)                  
  Row   4:    ***0***  (cs != CHK_CMD)_1     (~MISO_CountEn && ~counter_done && (cs != IDLE))
  Row   5:    ***0***  counter_done_0        (~MISO_CountEn && ((cs != IDLE) && (cs != CHK_CMD)))
  Row   6:    ***0***  counter_done_1        ((cs != IDLE) && (cs != CHK_CMD))
  Row   7:    ***0***  MISO_CountEn_0        (((cs != IDLE) && (cs != CHK_CMD)) && ~counter_done)
  Row   8:    ***0***  MISO_CountEn_1        (((cs != IDLE) && (cs != CHK_CMD)) && ~counter_done)

----------------Focused Condition View-------------------
Line       151 Item    1  (state_countout == 10)
Condition totals: 0 of 1 input term covered = 0.00%

              Input Term   Covered  Reason for no coverage   Hint
             -----------  --------  -----------------------  --------------
  (state_countout == 10)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                Non-masking condition(s)      
 ---------  ---------  --------------------      -------------------------     
  Row   1:          1  (state_countout == 10)_0  -                             
  Row   2:    ***0***  (state_countout == 10)_1  -                             

----------------Focused Condition View-------------------
Line       152 Item    1  (MISO_CountOut == 0)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (MISO_CountOut == 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (MISO_CountOut == 0)_0  -                             
  Row   2:    ***0***  (MISO_CountOut == 0)_1  -                             



Directive Coverage:
    Directives                       9         9         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top_uvm/DUT/S/cover__assertion9         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(214)
                                                                                25 Covered   
/top_uvm/DUT/S/cover__assertion8         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(213)
                                                                                 3 Covered   
/top_uvm/DUT/S/cover__assertion7         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(212)
                                                                                22 Covered   
/top_uvm/DUT/S/cover__assertion6         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(211)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion5         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(210)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion4         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(209)
                                                                                88 Covered   
/top_uvm/DUT/S/cover__assertion3         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(208)
                                                                                 9 Covered   
/top_uvm/DUT/S/cover__assertion2         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(207)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion1         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(206)
                                                                               477 Covered   
FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top_uvm/DUT/S --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  36                IDLE                   0
  44             CHK_CMD                   1
  78               WRITE                   2
  62           READ_DATA                   4
  70            READ_ADD                   3
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                  97          
                 CHK_CMD                  69          
                   WRITE                  43          
               READ_DATA                  45          
                READ_ADD                   5          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  39                   0                  69          IDLE -> CHK_CMD               
  59                   1                  19          CHK_CMD -> IDLE               
  55                   2                  22          CHK_CMD -> WRITE              
  51                   3                  25          CHK_CMD -> READ_DATA          
  47                   4                   3          CHK_CMD -> READ_ADD           
  80                   5                  22          WRITE -> IDLE                 
  64                   6                  25          READ_DATA -> IDLE             
  72                   7                   3          READ_ADD -> IDLE              


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      44        18        26    40.90%

================================Statement Details================================

Statement Coverage for instance /top_uvm/DUT/S --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.sv
    2                                                module SPI_SLAVE (MOSI,MISO,SS_n,clk,rst_n,rx_data,rx_valid, tx_data, tx_valid);
    3                                                input MOSI,SS_n,clk,rst_n,tx_valid;
    4                                                input [7:0] tx_data;
    5                                                output reg MISO;
    6                                                output reg rx_valid;
    7                                                output reg [9:0] rx_data; 
    8                                                
    9                                                
    10                                               
    11                                               state cs,ns;
    12                                               reg rd_flag; // to check if READ_ADD state has been executed or not (high if executed)
    13                                               reg [3:0] state_countout;
    14                                               reg[3:0] MISO_CountOut; ///// Bug msh mafrood 23 bits 3shan aslan fel reset ana me5aleh be 7 fa hayst3ml 3 bits bas
    15                                               wire counter_enable; // to count 10 clock cycles while recieving data
    16                                               wire counter_done; // flag sent by the counter, high when 10 cycles are completed
    17                                               reg MISO_CountEn; 
    18                                               wire MISO_CountDone;
    19                                               
    20                                               
    21                                               //state logic
    22              1                          2     always@(posedge clk or negedge rst_n) begin
    23                                                 if(~rst_n) begin
    24              1                          2         cs<= IDLE;
    25                                                  
    26                                                 end
    27                                                 else begin
    28              1                    ***0***         cs<=ns;
    29                                                 end
    30                                               end  
    31                                               
    32                                               
    33                                               //next state logic
    34              1                          3     always@(*) begin
    35                                                 case(cs)
    36                                                 IDLE: begin 
    37                                                   
    38                                                   if(~SS_n) 
    39              1                          1           ns=CHK_CMD;
    40                                                   else 
    41              1                          1           ns=IDLE;
    42                                                 end
    43                                               
    44                                                 CHK_CMD:
    45                                                   if(~SS_n) begin
    46                                                     if(MOSI && ~rd_flag) begin
    47              1                    ***0***              ns=READ_ADD;
    48                                                        
    49                                                       end
    50                                                       else if(MOSI && rd_flag) begin
    51              1                    ***0***              ns=READ_DATA;
    52                                                        
    53                                                       end
    54                                                       else if(~MOSI) begin
    55              1                    ***0***              ns=WRITE;
    56                                                       end
    57                                                   end
    58                                                   else if(SS_n) begin
    59              1                    ***0***           ns=IDLE;
    60                                                   end
    61                                               
    62                                                 READ_DATA:
    63                                                   if(SS_n) begin
    64              1                    ***0***           ns=IDLE;
    65                                                   end
    66                                                   else begin
    67              1                    ***0***           ns=READ_DATA;
    68                                                   end
    69                                               
    70                                                 READ_ADD:
    71                                                   if(SS_n) begin
    72              1                    ***0***           ns=IDLE;
    73                                                   end
    74                                                   else begin
    75              1                    ***0***           ns=READ_ADD;
    76                                                   end
    77                                                   
    78                                                 WRITE:
    79                                                    if(SS_n) begin
    80              1                    ***0***           ns=IDLE;
    81                                                   end
    82                                                   else begin
    83              1                    ***0***           ns=WRITE;
    84                                                   end
    85                                               default:begin//missing default state
    86              1                          1       ns=IDLE;
    87                                               end
    88                                                   endcase
    89                                               end
    90                                                 
    91                                               // output logic
    92              1                          2     always@ (posedge clk or negedge  rst_n) begin//was missing negedge...
    93                                               if(!rst_n) begin
    94              1                          2       rd_flag<=0;//was multiply driven through the always blocks along the design
    95                                               end
    96                                                 if(cs==IDLE) begin
    97              1                          1         MISO<=0;//was missing
    98              1                          1         rx_data<=0;
    99                                                 end
    100                                                else begin
    101                                                if(counter_enable) begin
    102             1                    ***0***         rx_data<={MOSI,rx_data[9:1]};
    103                                                end
    104                                                
    105                                                if(cs==READ_ADD && counter_done) begin
    106             1                    ***0***         rd_flag<=1;
    107                                                end
    108                                                else if (cs==READ_DATA && counter_done && MISO_CountDone)begin
    109             1                    ***0***         rd_flag<=0;
    110                                                end
    111                                                 
    112                                                if(MISO_CountEn&&(cs==READ_DATA)) begin
    113             1                    ***0***         MISO<= tx_data[MISO_CountOut];
    114                                                end
    115                                              end
    116                                              end
    117                                              
    118                                              // counters logic
    119             1                          2     always@(posedge clk or negedge rst_n) begin
    120                                                if(~rst_n) begin
    121             1                          2         state_countout<=0;
    122             1                          2         MISO_CountOut<=7; // counter_down, to send MSB firstly to master
    123                                                end
    124                                                else begin
    125                                                  if(cs==IDLE)begin
    126             1                    ***0***           state_countout<=0;
    127             1                    ***0***           MISO_CountOut<=7;
    128             1                    ***0***           MISO_CountEn<=0;
    129                                                  end
    130                                                  else if(counter_enable) begin
    131             1                    ***0***           state_countout<=state_countout+1;
    132                                                  end
    133                                                  if(counter_done) begin
    134             1                    ***0***           state_countout<=0;
    135             1                    ***0***           MISO_CountOut<=7;  
    136                                                  end
    137                                                  if(counter_done&&cs==READ_DATA)begin
    138             1                    ***0***         MISO_CountEn<=1;
    139                                                  end
    140                                                  if(MISO_CountEn) begin
    141             1                    ***0***           MISO_CountOut<=MISO_CountOut-1;
    142                                                  end
    143                                                  if (MISO_CountDone) begin
    144             1                    ***0***           MISO_CountOut<=7;
    145             1                    ***0***           MISO_CountEn<=0;
    146                                                  end
    147                                                end  
    148                                              end
    149                                              
    150             1                          3     assign counter_enable=(cs != IDLE && cs!=CHK_CMD && ~counter_done && ~MISO_CountEn)?1:0;
    151             1                          2     assign counter_done = (state_countout==4'b1010)?1:0;
    152             1                          2     assign MISO_CountDone = (MISO_CountOut== 0)?1:0;
    153             1                          1     always @(posedge clk ) begin
    154                                                if(counter_done)begin
    155             1                    ***0***         rx_valid<=1;
    156                                                end
    157                                                else begin
    158             1                          1         rx_valid<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        82         4    95.34%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/DUT/S --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                    MISO_CountDone           1           1                              100.00 
                                      MISO_CountEn           1           1                              100.00 
                                  MISO_CountOut[3]           0           0                                0.00 
                                MISO_CountOut[2-0]           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                      counter_done           1           1                              100.00 
                                    counter_enable           1           1                              100.00 
                                                cs               ENUM type       Value       Count 
                                                                      IDLE           5      100.00 
                                                                   CHK_CMD           4      100.00 
                                                                     WRITE           2      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                                ns               ENUM type       Value       Count 
                                                                      IDLE           4      100.00 
                                                                   CHK_CMD           4      100.00 
                                                                     WRITE           4      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                           rd_flag           0           1                               50.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                               state_countout[3-0]           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           0           1                               50.00 

Total Node Count     =         48 
Toggled Node Count   =         45 
Untoggled Node Count =          3 

Toggle Coverage      =      95.34% (82 of 86 bins)

=================================================================================
=== Instance: /top_uvm/DUT
=== Design Unit: work.SPI_Wrapper
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top_uvm/DUT/assert__assertion2
                     SPI_WRAPPER.sv(30)                 0          1
/top_uvm/DUT/assert__assertion1
                     SPI_WRAPPER.sv(29)                 0          1

Directive Coverage:
    Directives                       2         2         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top_uvm/DUT/cover__assertion2           SPI_Wrapper Verilog  SVA  SPI_WRAPPER.sv(34)
                                                                               426 Covered   
/top_uvm/DUT/cover__assertion1           SPI_Wrapper Verilog  SVA  SPI_WRAPPER.sv(33)
                                                                                 9 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top_uvm/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_WRAPPER.sv
    1                                                module SPI_Wrapper(spi_inter.DUT spi_if);
    2                                                logic MOSI, SS_n,clk,rst_n,MISO;
    3                                                
    4                                                
    5               1                          2     assign MOSI=spi_if.MOSI;
    6               1                          3     assign SS_n=spi_if.SS_n;
    7               1                          3     assign rst_n=spi_if.rst_n;
    8                                                assign spi_if.MISO=MISO;
    9               1                          4     assign clk=spi_if.clk;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        49         1    98.00%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                       rxdata[0-9]           1           1                              100.00 
                                          tx_valid           0           1                               50.00 
                                       txdata[0-7]           1           1                              100.00 

Total Node Count     =         25 
Toggled Node Count   =         24 
Untoggled Node Count =          1 

Toggle Coverage      =      98.00% (49 of 50 bins)

=================================================================================
=== Instance: /top_uvm/Golden_ref/RAM_INTERFACE
=== Design Unit: work.rram
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         9         1         8    11.11%

================================Branch Details================================

Branch Coverage for instance /top_uvm/Golden_ref/RAM_INTERFACE

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rram.sv
------------------------------------IF Branch------------------------------------
    18                                         2     Count coming in to IF
    18              1                          2         if(!rst_n) begin
    22              1                    ***0***         else begin if(rx_valid) begin case (din[9:8])
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    22                                   ***0***     Count coming in to IF
    22              2                    ***0***         else begin if(rx_valid) begin case (din[9:8])
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    22                                   ***0***     Count coming in to CASE
    23              1                    ***0***             2'b00:begin
    26              1                    ***0***             2'b01:begin
    29              1                    ***0***             2'b10:begin
    32              1                    ***0***             2'b11:begin
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       8         3         5    37.50%

================================Statement Details================================

Statement Coverage for instance /top_uvm/Golden_ref/RAM_INTERFACE --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File rram.sv
    1                                                module rram (din,clk,rst_n,rx_valid,dout,tx_valid);
    2                                                //defining the parameters with their default values
    3                                                parameter MEM_DEPTH=256;
    4                                                parameter ADDR_SIZE = 8;
    5                                                //setting the ports types
    6                                                input [9:0] din;
    7                                                input clk,rst_n,rx_valid;
    8                                                output [7:0] dout;
    9                                                output tx_valid;
    10                                               reg [7:0] dout_tmp; 
    11                                               reg tx_valid_tmp;
    12                                               //defining a holder for the address value
    13                                               reg [ADDR_SIZE-1:0] address_holder;
    14                                               //defining the ram block
    15                                               reg [7:0] mem [MEM_DEPTH-1:0];
    16                                               //setting the functionality
    17              1                          2     always @(posedge clk or negedge rst_n) begin
    18                                                   if(!rst_n) begin
    19              1                          2             dout_tmp<=0;
    20              1                          2             tx_valid_tmp<=0;
    21                                                   end
    22                                                   else begin if(rx_valid) begin case (din[9:8])
    23                                                       2'b00:begin
    24              1                    ***0***                 address_holder<=din[7:0];
    25                                                       end
    26                                                       2'b01:begin
    27              1                    ***0***               mem [address_holder]<=din[7:0];  
    28                                                       end
    29                                                       2'b10:begin
    30              1                    ***0***                 address_holder<=din [7:0];
    31                                                       end
    32                                                       2'b11:begin
    33              1                    ***0***                 dout_tmp<=mem[address_holder];
    34              1                    ***0***                 tx_valid_tmp<=1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         78        76         2    97.43%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/Golden_ref/RAM_INTERFACE --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                               address_holder[7-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                          din[0-9]           1           1                              100.00 
                                         dout[0-7]           1           1                              100.00 
                                     dout_tmp[7-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                          tx_valid           0           1                               50.00 
                                      tx_valid_tmp           0           1                               50.00 

Total Node Count     =         39 
Toggled Node Count   =         37 
Untoggled Node Count =          2 

Toggle Coverage      =      97.43% (76 of 78 bins)

=================================================================================
=== Instance: /top_uvm/Golden_ref/SPI_INTERFACE
=== Design Unit: work.SPI
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        47         7        40    14.89%

================================Branch Details================================

Branch Coverage for instance /top_uvm/Golden_ref/SPI_INTERFACE

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI.sv
------------------------------------IF Branch------------------------------------
    18                                         2     Count coming in to IF
    18              1                          2         if(!rst_n) begin
    21              1                    ***0***         else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------CASE Branch------------------------------------
    27                                         3     Count coming in to CASE
    28              1                          2         IDLE:begin
    36              1                    ***0***          CHK_CMD:begin
    52              1                    ***0***          READ_ADD:begin
    60              1                    ***0***          READ_DATA:begin
    68              1                    ***0***          WRITE:begin
    76              1                          1          default:begin
Branch totals: 2 hits of 6 branches = 33.33%

------------------------------------IF Branch------------------------------------
    29                                         2     Count coming in to IF
    29              1                          1             if(!SS_n) begin
    32              1                          1             else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    37                                   ***0***     Count coming in to IF
    37              1                    ***0***             if(SS_n) begin
    40              1                    ***0***             else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***                 if(!({SS_n,MOSI}))begin
    44              1                    ***0***                 else if((!(SS_n))&&(MOSI)&&(!(state))) begin
    47              1                    ***0***                 else if((!(SS_n))&&(MOSI)&&(state)) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    53                                   ***0***     Count coming in to IF
    53              1                    ***0***             if(~SS_n) begin
    56              1                    ***0***             else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              1                    ***0***                if(~SS_n) begin
    64              1                    ***0***             else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    69                                   ***0***     Count coming in to IF
    69              1                    ***0***                if(~SS_n) begin
    72              1                    ***0***             else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------CASE Branch------------------------------------
    87                                         1     Count coming in to CASE
    88              1                          1     IDLE:begin
    94              1                    ***0***     READ_ADD:begin
    104             1                    ***0***     READ_DATA:begin
    122             1                    ***0***     WRITE:begin
                                         ***0***     All False Count
Branch totals: 1 hit of 5 branches = 20.00%

------------------------------------IF Branch------------------------------------
    95                                   ***0***     Count coming in to IF
    95              1                    ***0***           if(shift_counter==0) begin
    99              1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    105                                  ***0***     Count coming in to IF
    105             1                    ***0***         if((shift_counter==0)&&(!(read_state))) begin
    109             1                    ***0***         else if ((shift_counter>0)&&(!(read_state))) begin
    113             1                    ***0***         else if ((shift_counter==0)&&(read_state)) begin
    117             1                    ***0***         else if (tx_valid) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 5 branches = 0.00%

------------------------------------IF Branch------------------------------------
    123                                  ***0***     Count coming in to IF
    123             1                    ***0***         if(shift_counter==0) begin
    126             1                    ***0***         else begin
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    134                                        2     Count coming in to IF
    134             1                          2       if(~rst_n) begin
    138             1                    ***0***         else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------CASE Branch------------------------------------
    139                                  ***0***     Count coming in to CASE
    140             1                    ***0***             IDLE:begin
    143             1                    ***0***                 READ_ADD:begin
    148             1                    ***0***                READ_DATA:begin
                                         ***0***     All False Count
Branch totals: 0 hits of 4 branches = 0.00%

------------------------------------IF Branch------------------------------------
    144                                  ***0***     Count coming in to IF
    144             1                    ***0***                     if(shift_counter==0) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    149                                  ***0***     Count coming in to IF
    149             1                    ***0***                  if((shift_counter==0)&&(!(read_state))) begin
    152             1                    ***0***                  else if ((shift_counter==0)&&(read_state)) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 3 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      19         0        19     0.00%

================================Condition Details================================

Condition Coverage for instance /top_uvm/Golden_ref/SPI_INTERFACE --

  File SPI.sv
----------------Focused Condition View-------------------
Line       44 Item    1  ((~SS_n && MOSI) && ~state)
Condition totals: 0 of 3 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  No hits                  Hit '_0' and '_1'
        MOSI         N  No hits                  Hit '_0' and '_1'
       state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  SS_n_0                (~state && MOSI)              
  Row   2:    ***0***  SS_n_1                -                             
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:    ***0***  MOSI_1                (~state && ~SS_n)             
  Row   5:    ***0***  state_0               (~SS_n && MOSI)               
  Row   6:    ***0***  state_1               (~SS_n && MOSI)               

----------------Focused Condition View-------------------
Line       47 Item    1  ((~SS_n && MOSI) && state)
Condition totals: 0 of 3 input terms covered = 0.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         N  No hits                  Hit '_0' and '_1'
        MOSI         N  No hits                  Hit '_0' and '_1'
       state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  SS_n_0                (state && MOSI)               
  Row   2:    ***0***  SS_n_1                -                             
  Row   3:    ***0***  MOSI_0                ~SS_n                         
  Row   4:    ***0***  MOSI_1                (state && ~SS_n)              
  Row   5:    ***0***  state_0               (~SS_n && MOSI)               
  Row   6:    ***0***  state_1               (~SS_n && MOSI)               

----------------Focused Condition View-------------------
Line       95 Item    1  (shift_counter == 0)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  -                             

----------------Focused Condition View-------------------
Line       105 Item    1  ((shift_counter == 0) && ~read_state)
Condition totals: 0 of 2 input terms covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'
            read_state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  ~read_state                   
  Row   3:    ***0***  read_state_0            (shift_counter == 0)          
  Row   4:    ***0***  read_state_1            (shift_counter == 0)          

----------------Focused Condition View-------------------
Line       109 Item    1  ((shift_counter > 0) && ~read_state)
Condition totals: 0 of 2 input terms covered = 0.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (shift_counter > 0)         N  No hits                  Hit '_0' and '_1'
           read_state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:    ***0***  (shift_counter > 0)_0  -                             
  Row   2:    ***0***  (shift_counter > 0)_1  ~read_state                   
  Row   3:    ***0***  read_state_0           (shift_counter > 0)           
  Row   4:    ***0***  read_state_1           (shift_counter > 0)           

----------------Focused Condition View-------------------
Line       113 Item    1  ((shift_counter == 0) && read_state)
Condition totals: 0 of 2 input terms covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'
            read_state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  read_state                    
  Row   3:    ***0***  read_state_0            (shift_counter == 0)          
  Row   4:    ***0***  read_state_1            (shift_counter == 0)          

----------------Focused Condition View-------------------
Line       123 Item    1  (shift_counter == 0)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  -                             

----------------Focused Condition View-------------------
Line       144 Item    1  (shift_counter == 0)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  -                             

----------------Focused Condition View-------------------
Line       149 Item    1  ((shift_counter == 0) && ~read_state)
Condition totals: 0 of 2 input terms covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'
            read_state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  ~read_state                   
  Row   3:    ***0***  read_state_0            (shift_counter == 0)          
  Row   4:    ***0***  read_state_1            (shift_counter == 0)          

----------------Focused Condition View-------------------
Line       152 Item    1  ((shift_counter == 0) && read_state)
Condition totals: 0 of 2 input terms covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (shift_counter == 0)         N  No hits                  Hit '_0' and '_1'
            read_state         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (shift_counter == 0)_0  -                             
  Row   2:    ***0***  (shift_counter == 0)_1  read_state                    
  Row   3:    ***0***  read_state_0            (shift_counter == 0)          
  Row   4:    ***0***  read_state_1            (shift_counter == 0)          


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       5         5         0   100.00%
    FSM Transitions                  8         8         0   100.00%

================================FSM Details================================

FSM Coverage for instance /top_uvm/Golden_ref/SPI_INTERFACE --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  28                IDLE                   0
  36             CHK_CMD                   1
  60           READ_DATA                   4
  52            READ_ADD                   3
  68               WRITE                   2
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE                  97          
                 CHK_CMD                  69          
               READ_DATA                  45          
                READ_ADD                   5          
                   WRITE                  43          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  30                   0                  69          IDLE -> CHK_CMD               
  48                   1                  25          CHK_CMD -> READ_DATA          
  45                   2                   3          CHK_CMD -> READ_ADD           
  42                   3                  22          CHK_CMD -> WRITE              
  38                   4                  19          CHK_CMD -> IDLE               
  65                   5                  25          READ_DATA -> IDLE             
  57                   6                   3          READ_ADD -> IDLE              
  73                   7                  22          WRITE -> IDLE                 


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   5         5         0   100.00%
        FSM Transitions              8         8         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      47        14        33    29.78%

================================Statement Details================================

Statement Coverage for instance /top_uvm/Golden_ref/SPI_INTERFACE --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI.sv
    2                                                module SPI (tx_valid,tx_data,rx_valid,rx_data,rst_n,clk,SS_n,MISO,MOSI);
    3                                                //Encoding the FSM States
    4                                                
    5                                                //defining the ports types
    6                                                input MOSI,SS_n,rst_n,clk,tx_valid;
    7                                                input [7:0] tx_data;
    8                                                output rx_valid,MISO;
    9                                                output [9:0] rx_data;
    10                                               reg rx_valid_tmp,MISO_tmp;
    11                                               reg [9:0] rx_data_tmp;
    12                                               //the state carrying regs
    13                                               state cs,ns;
    14                                               //a signal holding whether the state is reading address or reading data
    15                                               reg state;
    16                                               //implementing the state memory
    17              1                          2     always @(posedge clk or negedge rst_n) begin
    18                                                   if(!rst_n) begin
    19              1                          2             cs<=IDLE;
    20                                                   end
    21                                                   else begin
    22              1                    ***0***             cs<=ns;
    23                                                   end
    24                                               end 
    25                                               //implementing the state transitions
    26              1                          3     always @(cs or MOSI or SS_n or tx_valid or tx_data or state or read_state) begin
    27                                                   case (cs)
    28                                                   IDLE:begin
    29                                                       if(!SS_n) begin
    30              1                          1                 ns=CHK_CMD;
    31                                                       end
    32                                                       else begin
    33              1                          1                 ns=IDLE;
    34                                                       end
    35                                                   end
    36                                                    CHK_CMD:begin
    37                                                       if(SS_n) begin
    38              1                    ***0***                 ns=IDLE;
    39                                                       end
    40                                                       else begin
    41                                                           if(!({SS_n,MOSI}))begin
    42              1                    ***0***                     ns=WRITE;
    43                                                           end
    44                                                           else if((!(SS_n))&&(MOSI)&&(!(state))) begin
    45              1                    ***0***                     ns=READ_ADD;
    46                                                           end
    47                                                           else if((!(SS_n))&&(MOSI)&&(state)) begin
    48              1                    ***0***                     ns=READ_DATA;
    49                                                           end
    50                                                       end
    51                                                    end
    52                                                    READ_ADD:begin
    53                                                       if(~SS_n) begin
    54              1                    ***0***                 ns=READ_ADD;
    55                                                       end
    56                                                       else begin
    57              1                    ***0***                 ns=IDLE;
    58                                                       end
    59                                                    end   
    60                                                    READ_DATA:begin
    61                                                          if(~SS_n) begin
    62              1                    ***0***                 ns=READ_DATA;
    63                                                       end
    64                                                       else begin
    65              1                    ***0***                 ns=IDLE;
    66                                                       end
    67                                                    end
    68                                                    WRITE:begin
    69                                                          if(~SS_n) begin
    70              1                    ***0***                 ns=WRITE;
    71                                                       end
    72                                                       else begin
    73              1                    ***0***                 ns=IDLE;
    74                                                       end
    75                                                    end
    76                                                    default:begin
    77              1                          1             ns=IDLE;
    78                                                    end
    79                                                   endcase
    80                                               end
    81                                               //Output logic
    82                                               //a counter for the conversion process from serial to parallel
    83                                               reg [3:0] shift_counter;
    84                                               //a signal to determine the state in case of reading data from the ram block
    85                                               reg read_state=0;
    86              1                          1     always @(posedge clk ) begin
    87                                               case(cs)
    88                                               IDLE:begin
    89              1                          1         shift_counter<=10;  
    90              1                          1         MISO_tmp<=0;
    91              1                          1         rx_data_tmp<=0;
    92              1                          1         rx_valid_tmp<=0;
    93                                                   end
    94                                               READ_ADD:begin
    95                                                     if(shift_counter==0) begin
    96              1                    ***0***             rx_valid_tmp<=1;
    97              1                    ***0***             shift_counter<=10;
    98                                                   end
    99                                                   else begin
    100             1                    ***0***             rx_data_tmp<={MOSI,rx_data_tmp[9:1]};
    101             1                    ***0***             shift_counter<=shift_counter-1;rx_valid_tmp<=0;
    101             2                    ***0***     
    102                                                  end
    103                                              end
    104                                              READ_DATA:begin
    105                                                  if((shift_counter==0)&&(!(read_state))) begin
    106             1                    ***0***             shift_counter<=8;
    107             1                    ***0***             rx_valid_tmp<=1;
    108                                                  end
    109                                                  else if ((shift_counter>0)&&(!(read_state))) begin
    110             1                    ***0***              rx_data_tmp<={MOSI,rx_data_tmp[9:1]};
    111             1                    ***0***              shift_counter<=shift_counter-1;  rx_valid_tmp<=0;
    111             2                    ***0***     
    112                                                  end
    113                                                  else if ((shift_counter==0)&&(read_state)) begin
    114             1                    ***0***             shift_counter<=10;
    115             1                    ***0***             rx_valid_tmp<=0;
    116                                                  end
    117                                                  else if (tx_valid) begin
    118             1                    ***0***             MISO_tmp<=tx_data[shift_counter-1];
    119             1                    ***0***             shift_counter<=shift_counter-1; rx_valid_tmp<=0;
    119             2                    ***0***     
    120                                                  end
    121                                                  end
    122                                              WRITE:begin
    123                                                  if(shift_counter==0) begin
    124             1                    ***0***             rx_valid_tmp<=1;
    125                                                  end
    126                                                  else begin
    127             1                    ***0***             rx_data_tmp<={MOSI,rx_data_tmp[9:1]};
    128             1                    ***0***             shift_counter<=shift_counter-1;
    129                                                  end
    130                                              end
    131                                              endcase    
    132                                              end
    133             1                          2     always @(posedge clk or negedge rst_n) begin
    134                                                if(~rst_n) begin
    135             1                          2             state<=0;
    136             1                          2             read_state<=0;
    137                                                  end
    138                                                  else begin
    139                                                      case (cs)
    140                                                      IDLE:begin
    141             1                    ***0***                 read_state<=0;
    142                                                      end
    143                                                          READ_ADD:begin
    144                                                              if(shift_counter==0) begin
    145             1                    ***0***                         state<=1;
    146                                                              end
    147                                                          end
    148                                                         READ_DATA:begin
    149                                                           if((shift_counter==0)&&(!(read_state))) begin
    150             1                    ***0***                     read_state<=1;
    151                                                           end
    152                                                           else if ((shift_counter==0)&&(read_state)) begin
    153             1                    ***0***                     read_state<=0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         96        94         2    97.91%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/Golden_ref/SPI_INTERFACE --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_tmp           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                                cs               ENUM type       Value       Count 
                                                                      IDLE           5      100.00 
                                                                   CHK_CMD           4      100.00 
                                                                     WRITE           2      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                                ns               ENUM type       Value       Count 
                                                                      IDLE           4      100.00 
                                                                   CHK_CMD           4      100.00 
                                                                     WRITE           4      100.00 
                                                                  READ_ADD           1      100.00 
                                                                 READ_DATA           1      100.00 
                                        read_state           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                  rx_data_tmp[9-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      rx_valid_tmp           1           1                              100.00 
                                shift_counter[3-0]           1           1                              100.00 
                                             state           0           1                               50.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           0           1                               50.00 

Total Node Count     =         53 
Toggled Node Count   =         51 
Untoggled Node Count =          2 

Toggle Coverage      =      97.91% (94 of 96 bins)

=================================================================================
=== Instance: /top_uvm/Golden_ref
=== Design Unit: work.topmod
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         4         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top_uvm/Golden_ref --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File topmod.sv
    1                                                module topmod (golden_inter_ref.GOLDEN gold_if);
    2                                                
    3                                                logic  MOSI,SS_n,rst_n,clk,MISO;
    4                                                
    5               1                          3     assign SS_n = gold_if.SS_n_gold;
    6               1                          3     assign rst_n= gold_if.rst_n_gold;
    7               1                          2     assign MOSI=gold_if.MOSI_gold;
    8               1                          4     assign clk=gold_if.clk;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         50        49         1    98.00%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm/Golden_ref --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           0           1                               50.00 

Total Node Count     =         25 
Toggled Node Count   =         24 
Untoggled Node Count =          1 

Toggle Coverage      =      98.00% (49 of 50 bins)

=================================================================================
=== Instance: /top_uvm
=== Design Unit: work.top_uvm
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       7         7         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top_uvm --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File TOP_UVM.sv
    5                                                module top_uvm();
    6                                                    logic clk;
    7                                                    initial begin
    8               1                          1             clk=0;
    9               1                          1             forever begin
    10              1                          3                #30; clk=~clk;
    10              2                          2     
    11                                                       end
    12                                                   end
    13                                                   spi_inter spi_if(clk);
    14                                                   golden_inter_ref gold_if(clk);
    15                                                   SPI_Wrapper DUT(spi_if);
    16                                                   topmod Golden_ref(gold_if);
    17                                                   initial begin
    18              1                          1             uvm_config_db #(virtual spi_inter)::set(null,"uvm_test_top","SPI_IF",spi_if);
    19              1                          1             uvm_config_db #(virtual golden_inter_ref)::set(null,"uvm_test_top","GOLDEN_IF",gold_if);
    20              1                          1             run_test("spi_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top_uvm --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                               clk           1           1                              100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /spi_sequence_item_pkg
=== Design Unit: work.spi_sequence_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /spi_sequence_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***     `uvm_object_utils(spi_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                          1     Count coming in to IF
    5               2                    ***0***     `uvm_object_utils(spi_sequence_item)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***     `uvm_object_utils(spi_sequence_item)
    5               4                    ***0***     `uvm_object_utils(spi_sequence_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                          1     Count coming in to IF
    5               5                    ***0***     `uvm_object_utils(spi_sequence_item)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***     `uvm_object_utils(spi_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /spi_sequence_item_pkg --

  File sequence_item.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      12         3         9    25.00%

================================Statement Details================================

Statement Coverage for instance /spi_sequence_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
    1                                                package spi_sequence_item_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class spi_sequence_item extends uvm_sequence_item;
    5               1                    ***0***     `uvm_object_utils(spi_sequence_item)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                          2     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                          1     
    5              10                    ***0***     
    6                                                rand logic rst_n,MOSI,SS_n;
    7                                                logic MISO,MISO_ref;
    8                                                 function new(string name = "spi_sequence_item");
    9               1                          6       super.new(name);
    10                                                endfunction
    11                                                function string convert2string();
    12              1                    ***0***       return $sformatf("%s rst_n = %0b , SS_n = %0b , MOSI = %0b , MISO = %0b",super.convert2string(),rst_n,SS_n,MOSI,MISO);


=================================================================================
=== Instance: /spi_sequence_pkg
=== Design Unit: work.spi_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/spi_sequence_pkg/spi_rand_all_sequence/body/#ublk#33705031#104/immed__108
                     sequence.sv(108)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        60         2        58     3.33%

================================Branch Details================================

Branch Coverage for instance /spi_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils (spi_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils (spi_reset_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils (spi_reset_sequence)
    6               4                    ***0***             `uvm_object_utils (spi_reset_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils (spi_reset_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils (spi_reset_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              1                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              2                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              3                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
    24              4                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              5                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    24                                   ***0***     Count coming in to IF
    24              6                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              1                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              2                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              3                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
    42              4                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              5                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    42                                   ***0***     Count coming in to IF
    42              6                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              1                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              2                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              3                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
    60              4                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              5                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    60                                   ***0***     Count coming in to IF
    60              6                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              1                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              2                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              3                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
    78              4                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              5                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    78                                   ***0***     Count coming in to IF
    78              6                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              1                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              2                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              3                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
    96              4                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              5                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    96                                   ***0***     Count coming in to IF
    96              6                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      12         0        12     0.00%

================================Condition Details================================

Condition Coverage for instance /spi_sequence_pkg --

  File sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       24 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       24 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       42 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       42 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       60 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       60 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       78 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       78 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       96 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       96 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     100        21        79    21.00%

================================Statement Details================================

Statement Coverage for instance /spi_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence.sv
    1                                                package spi_sequence_pkg;
    2                                                    import uvm_pkg::*;
    3                                                    `include "uvm_macros.svh"
    4                                                    import spi_sequence_item_pkg::*;
    5                                                    class spi_reset_sequence extends uvm_sequence #(spi_sequence_item);
    6               1                    ***0***             `uvm_object_utils (spi_reset_sequence)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                        spi_sequence_item seq_item;
    8                                                
    9                                                        function new(string name = "spi_reset_sequence");
    10              1                          1                 super.new(name);
    11                                                       endfunction
    12                                               
    13                                                       task body();
    14              1                          1                seq_item = spi_sequence_item::type_id::create("seq_item");
    15              1                          1                start_item(seq_item);
    16              1                          1                seq_item.rst_n=0;
    17              1                          1                seq_item.SS_n=1;
    18              1                          1                seq_item.MOSI=0;
    19              1                          1                finish_item(seq_item);
    20                                                       endtask
    21                                                   endclass
    22                                               
    23                                                   class spi_MOSI_HIGH_sequence extends uvm_sequence #(spi_sequence_item);
    24              1                    ***0***              `uvm_object_utils (spi_MOSI_HIGH_sequence)
    24              2                    ***0***     
    24              3                    ***0***     
    24              4                    ***0***     
    24              5                    ***0***     
    24              6                    ***0***     
    24              7                    ***0***     
    24              8                    ***0***     
    24              9                    ***0***     
    24             10                    ***0***     
    25                                                       spi_sequence_item seq_item;
    26                                               
    27                                                       function new(string name = "spi_MOSI_HIGH_sequence");
    28              1                          1                 super.new(name);
    29                                                       endfunction
    30                                               
    31                                                       task body();
    32              1                    ***0***                seq_item = spi_sequence_item::type_id::create("seq_item");
    33              1                    ***0***                start_item(seq_item);
    34              1                    ***0***                seq_item.rst_n=1;
    35              1                    ***0***                seq_item.SS_n=0;
    36              1                    ***0***                seq_item.MOSI=1;
    37              1                    ***0***                finish_item(seq_item);
    38                                                       endtask
    39                                                   endclass
    40                                               
    41                                                     class spi_MOSI_LOW_sequence extends uvm_sequence #(spi_sequence_item);
    42              1                    ***0***              `uvm_object_utils (spi_MOSI_LOW_sequence)
    42              2                    ***0***     
    42              3                    ***0***     
    42              4                    ***0***     
    42              5                    ***0***     
    42              6                          1     
    42              7                    ***0***     
    42              8                    ***0***     
    42              9                    ***0***     
    42             10                    ***0***     
    43                                                       spi_sequence_item seq_item;
    44                                               
    45                                                       function new(string name = "spi_MOSI_LOW_sequence");
    46              1                          1                 super.new(name);
    47                                                       endfunction
    48                                               
    49                                                       task body();
    50              1                          1                seq_item = spi_sequence_item::type_id::create("seq_item");
    51              1                          1                start_item(seq_item);
    52              1                          1                seq_item.rst_n=1;
    53              1                          1                seq_item.SS_n=0;
    54              1                          1                seq_item.MOSI=0;
    55              1                          1                finish_item(seq_item);
    56                                                       endtask
    57                                                   endclass
    58                                               
    59                                                    class spi_finish_frame_sequence extends uvm_sequence #(spi_sequence_item);
    60              1                    ***0***              `uvm_object_utils (spi_finish_frame_sequence)
    60              2                    ***0***     
    60              3                    ***0***     
    60              4                    ***0***     
    60              5                    ***0***     
    60              6                    ***0***     
    60              7                    ***0***     
    60              8                    ***0***     
    60              9                    ***0***     
    60             10                    ***0***     
    61                                                       spi_sequence_item seq_item;
    62                                               
    63                                                       function new(string name = "spi_finish_frame_sequence");
    64              1                          1                 super.new(name);
    65                                                       endfunction
    66                                               
    67                                                       task body();
    68              1                    ***0***                seq_item = spi_sequence_item::type_id::create("seq_item");
    69              1                    ***0***                start_item(seq_item);
    70              1                    ***0***                seq_item.rst_n=1;
    71              1                    ***0***                seq_item.SS_n=1;
    72              1                    ***0***                seq_item.MOSI=0;
    73              1                    ***0***                finish_item(seq_item);
    74                                                       endtask
    75                                                   endclass
    76                                               
    77                                                   class spi_MOSI_RND_sequence extends uvm_sequence #(spi_sequence_item);
    78              1                    ***0***              `uvm_object_utils (spi_MOSI_RND_sequence)
    78              2                    ***0***     
    78              3                    ***0***     
    78              4                    ***0***     
    78              5                    ***0***     
    78              6                    ***0***     
    78              7                    ***0***     
    78              8                    ***0***     
    78              9                    ***0***     
    78             10                    ***0***     
    79                                                       spi_sequence_item seq_item;
    80                                               
    81                                                       function new(string name = "spi_MOSI_RND_sequence");
    82              1                          1                 super.new(name);
    83                                                       endfunction
    84                                               
    85                                                       task body();
    86              1                    ***0***                seq_item = spi_sequence_item::type_id::create("seq_item");
    87              1                    ***0***                start_item(seq_item);
    88              1                    ***0***                seq_item.rst_n=1;
    89              1                    ***0***                seq_item.SS_n=0;
    90              1                    ***0***                seq_item.MOSI=$random;
    91              1                    ***0***                finish_item(seq_item);
    92                                                       endtask
    93                                                   endclass
    94                                               
    95                                                       class spi_rand_all_sequence extends uvm_sequence #(spi_sequence_item);
    96              1                    ***0***             `uvm_object_utils (spi_rand_all_sequence)
    96              2                    ***0***     
    96              3                    ***0***     
    96              4                    ***0***     
    96              5                    ***0***     
    96              6                    ***0***     
    96              7                    ***0***     
    96              8                    ***0***     
    96              9                    ***0***     
    96             10                    ***0***     
    97                                                       spi_sequence_item seq_item;
    98                                               
    99                                                       function new(string name = "spi_rand_all_sequence");
    100             1                          1                 super.new(name);
    101                                                      endfunction
    102                                              
    103                                                      task body();
    104             1                    ***0***             repeat(100)begin
    105             1                    ***0***             seq_item = spi_sequence_item::type_id::create("seq_item");
    106             1                    ***0***             start_item(seq_item);
    107                                                    
    108                                                      assert(seq_item.randomize());
    109             1                    ***0***             finish_item(seq_item);


=================================================================================
=== Instance: /spi_coverage_collector_pkg
=== Design Unit: work.spi_coverage_collector_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses          4        na        na        na
            Covergroup Bins          8         8         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /spi_coverage_collector_pkg/spi_coverage_collector/cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                     8          8          -                      
    missing/total bins:                                     0          8          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint MISO                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         723          1          -    Covered              
        bin ones                                           32          1          -    Covered              
    Coverpoint SS_N                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         688          1          -    Covered              
        bin ones                                          104          1          -    Covered              
    Coverpoint RESET                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                          17          1          -    Covered              
        bin ones                                          775          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ones,ones>                                 6          1          -    Covered              
            bin <zeros,ones>                               92          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ss_n_high                          657                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /spi_coverage_collector_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File cvrcllctr.sv
    1                                                package spi_coverage_collector_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequence_item_pkg::*;
    5                                                class spi_coverage_collector extends uvm_component;
    6               1                    ***0***         `uvm_component_utils(spi_coverage_collector)
    6               2                    ***0***     
    6               3                          2     
    7                                                    uvm_analysis_export #(spi_sequence_item) cov_export;
    8                                                    uvm_tlm_analysis_fifo #(spi_sequence_item) cov_fifo;
    9                                                    spi_sequence_item seq_item_cov;
    10                                               
    11                                                   covergroup cg ;
    12                                               
    13                                               MISO: coverpoint seq_item_cov.MISO{
    14                                               	bins zeros={0};
    15                                               	bins ones={1};
    16                                               }
    17                                               SS_N: coverpoint seq_item_cov.SS_n{
    18                                               	bins zeros={0};
    19                                               	bins ones={1};
    20                                               }
    21                                               cross MISO,SS_N{
    22                                               	ignore_bins ss_n_high=binsof(SS_N)intersect{0};
    23                                               }
    24                                               
    25                                               RESET: coverpoint seq_item_cov.rst_n{
    26                                               	bins zeros={0};
    27                                               	bins ones={1};
    28                                               }
    29                                               
    30                                               
    31                                               
    32                                               
    33                                               
    34                                               endgroup : cg
    35                                               
    36                                               function new(string name="spi_coverage_collector",uvm_component parent=null);
    37              1                          1         super.new(name,parent);
    38              1                          1         cg=new();
    39                                               endfunction
    40                                               
    41                                                
    42                                                function void build_phase(uvm_phase phase);
    43              1                          1         super.build_phase(phase);
    44              1                          1         cov_export=new("cov_export",this);
    45              1                          1         cov_fifo=new("cov_fifo",this);
    46                                                endfunction
    47                                               
    48                                                function void connect_phase(uvm_phase phase);
    49              1                          1         super.connect_phase(phase);
    50              1                          1         cov_export.connect(cov_fifo.analysis_export);
    51                                                endfunction
    52                                               
    53                                               
    54                                                task run_phase(uvm_phase phase);
    55              1                          1         super.run_phase(phase);
    56              1                          1         forever begin
    57              1                          2             cov_fifo.get(seq_item_cov);
    58              1                          1             cg.sample();


=================================================================================
=== Instance: /spi_config_pkg
=== Design Unit: work.spi_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /spi_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***         `uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***         `uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***         `uvm_object_utils(spi_config)
    5               4                    ***0***         `uvm_object_utils(spi_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***         `uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***         `uvm_object_utils(spi_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /spi_config_pkg --

  File config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /spi_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
    1                                                package spi_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class spi_config extends uvm_object;
    5               1                    ***0***         `uvm_object_utils(spi_config)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                    virtual spi_inter spi_vif_config;
    7                                                    virtual golden_inter_ref gold_vif_config;
    8                                                
    9                                                    function new (string name = "spi_config");
    10              1                          2             super.new(name);


=================================================================================
=== Instance: /spi_scoreboard_pkg
=== Design Unit: work.spi_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /spi_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                          1                 if(seq_item_sb.MISO===gold_vif_sb.MISO_gold)begin
    44              1                    ***0***                 else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                    ***0***                    `uvm_info("run_phase",$sformatf("Correct MISO: %s",seq_item_sb.convert2string()),UVM_HIGH) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***                     `uvm_error("run_phase",$sformatf("Comparison failed, Transacction received by the DUT is %s while the reference is %0b",seq_item_sb.convert2string(),gold_vif_sb.MISO_gold));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    58                                   ***0***     Count coming in to IF
    58              1                    ***0***             `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    59                                   ***0***     Count coming in to IF
    59              1                    ***0***             `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       1         0         1     0.00%

================================Condition Details================================

Condition Coverage for instance /spi_scoreboard_pkg --

  File scoreboard.sv
----------------Focused Condition View-------------------
Line       40 Item    1  (this.seq_item_sb.MISO === this.gold_vif_sb.MISO_gold)
Condition totals: 0 of 1 input term covered = 0.00%

                                              Input Term   Covered  Reason for no coverage   Hint
                                             -----------  --------  -----------------------  --------------
  (this.seq_item_sb.MISO === this.gold_vif_sb.MISO_gold)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target                                                Non-masking condition(s)      
 ---------  ---------  --------------------                                      -------------------------     
  Row   1:    ***0***  (this.seq_item_sb.MISO === this.gold_vif_sb.MISO_gold)_0  -                             
  Row   2:          1  (this.seq_item_sb.MISO === this.gold_vif_sb.MISO_gold)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      21        13         8    61.90%

================================Statement Details================================

Statement Coverage for instance /spi_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
    1                                                package spi_scoreboard_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequence_item_pkg::*;
    5                                                import spi_config_pkg::*;
    6                                                class spi_scoreboard extends uvm_scoreboard;
    7               1                    ***0***         `uvm_component_utils(spi_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                    uvm_analysis_export #(spi_sequence_item) sb_export;
    9                                                    uvm_tlm_analysis_fifo #(spi_sequence_item) sb_fifo;
    10                                                   // spi_config spi_cfg_sb;
    11                                                   virtual golden_inter_ref gold_vif_sb;
    12                                                   spi_sequence_item seq_item_sb;
    13                                                   logic MISO_ref;
    14              1                          1         int error_count=0,correct_count=0;
    14              2                          1     
    15                                                   logic valid;
    16                                                   function new(string name="spi_scoreboard",uvm_component parent=null);
    17              1                          1             super.new(name,parent);
    18                                                   endfunction
    19                                               
    20                                                   function void build_phase(uvm_phase phase);
    21              1                          1             super.build_phase(phase);
    22                                                       // spi_cfg_sb=spi_config::type_id::create("spi_cfg_sb",this);
    23                                                   
    24              1                          1             sb_export = new("sb_export",this);
    25              1                          1             sb_fifo = new("sb_fifo",this);
    26                                                   //    if(!uvm_config_db #(logic)::get(this,"","GOLDEN_IF_MISO",MISO_ref))
    27                                                   //     `uvm_fatal("build_phase","SCOREBOARD - Unable to get the virtual golden interface of the SPI from the uvm_config_db")
    28                                                   endfunction
    29                                               
    30                                                   function void connect_phase(uvm_phase phase);
    31              1                          1             super.connect_phase(phase);
    32              1                          1             sb_export.connect(sb_fifo.analysis_export);
    33                                                   endfunction
    34                                                   
    35                                                    
    36                                                   task run_phase(uvm_phase phase);
    37              1                          1             super.run_phase(phase);
    38              1                          1             forever begin
    39              1                          2                sb_fifo.get(seq_item_sb);
    40                                                           if(seq_item_sb.MISO===gold_vif_sb.MISO_gold)begin
    41              1                          1                     correct_count++;
    42              1                    ***0***                    `uvm_info("run_phase",$sformatf("Correct MISO: %s",seq_item_sb.convert2string()),UVM_HIGH) 
    43                                                           end
    44                                                           else begin
    45              1                    ***0***                     error_count++;
    46              1                    ***0***                     `uvm_error("run_phase",$sformatf("Comparison failed, Transacction received by the DUT is %s while the reference is %0b",seq_item_sb.convert2string(),gold_vif_sb.MISO_gold));
    47                                                           end
    48                                                       end
    49                                                   endtask
    50                                                  
    51                                                   
    52                                               
    53                                               
    54                                               
    55                                               
    56                                                   function void report_phase(uvm_phase phase);
    57              1                    ***0***             super.report_phase(phase);
    58              1                    ***0***             `uvm_info("report_phase",$sformatf("Total successful transactions: %0d",correct_count),UVM_MEDIUM);
    59              1                    ***0***             `uvm_info("report_phase",$sformatf("Total failed transactions: %0d",error_count),UVM_MEDIUM);


=================================================================================
=== Instance: /spi_monitor_Pkg
=== Design Unit: work.spi_monitor_Pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /spi_monitor_Pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***                 `uvm_info("run_Phase",rsp_seq_item.convert2string(),UVM_HIGH)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /spi_monitor_Pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
    1                                                package spi_monitor_Pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequence_item_pkg::*;
    5                                                class spi_monitor extends uvm_monitor;
    6               1                    ***0***         `uvm_component_utils(spi_monitor)
    6               2                    ***0***     
    6               3                          2     
    7                                                    virtual spi_inter spi_vif_monitor;
    8                                                    virtual golden_inter_ref gold_vif_monitor;
    9                                                    spi_sequence_item rsp_seq_item;
    10                                                   uvm_analysis_port #(spi_sequence_item) mon_ap;
    11                                               
    12                                               
    13                                                   function new(string name = "spi_monitor", uvm_component parent=null);
    14              1                          1          super.new(name,parent);
    15                                                   endfunction
    16                                               
    17                                                   function void build_phase(uvm_phase phase);
    18              1                          1             super.build_phase(phase);
    19              1                          1             mon_ap = new("mon_ap",this);
    20                                                   endfunction : build_phase
    21                                                   
    22                                               
    23                                                   task run_phase(uvm_phase phase);
    24              1                          1             super.run_phase(phase);
    25              1                          1             forever begin
    26              1                          2                 rsp_seq_item = spi_sequence_item::type_id::create("rsp_seq_item");
    27              1                          2                 @(negedge spi_vif_monitor.clk);
    28                                                           //
    29              1                          1                 rsp_seq_item.MOSI=spi_vif_monitor.MOSI;
    30                                                           //
    31              1                          1                 rsp_seq_item.rst_n=spi_vif_monitor.rst_n;
    32                                                           //
    33              1                          1                 rsp_seq_item.SS_n=spi_vif_monitor.SS_n;
    34                                                           //
    35              1                          1                 rsp_seq_item.MISO=spi_vif_monitor.MISO;
    36                                                           //
    37              1                          1                 rsp_seq_item.MISO_ref=gold_vif_monitor.MISO_gold;
    38                                                           //
    39              1                          1                 mon_ap.write(rsp_seq_item);
    40              1                    ***0***                 `uvm_info("run_Phase",rsp_seq_item.convert2string(),UVM_HIGH)


=================================================================================
=== Instance: /spi_driver_pkg
=== Design Unit: work.spi_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /spi_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
------------------------------------IF Branch------------------------------------
    34                                         1     Count coming in to IF
    34              1                    ***0***         `uvm_info("run_phase",stim_seq_item.convert2string(),UVM_HIGH)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17        14         3    82.35%

================================Statement Details================================

Statement Coverage for instance /spi_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
    1                                                package spi_driver_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequence_item_pkg::*;
    5                                                
    6                                                
    7                                                class spi_driver extends uvm_driver #(spi_sequence_item);
    8               1                    ***0***      `uvm_component_utils(spi_driver)
    8               2                    ***0***     
    8               3                          2     
    9                                                 virtual spi_inter spi_vif_driver;
    10                                                virtual golden_inter_ref gold_vif_driver;
    11                                                spi_sequence_item stim_seq_item;
    12                                               
    13                                                function new(string name="spi_driver",uvm_component parent = null);
    14              1                          1       super.new(name,parent);
    15                                                endfunction
    16                                               
    17                                                task run_phase(uvm_phase phase);
    18              1                          1       super.run_phase(phase);
    19              1                          1       forever begin
    20              1                          2         stim_seq_item = spi_sequence_item::type_id::create("stim_seq_item");
    21              1                          2         seq_item_port.get_next_item(stim_seq_item);
    22                                                   //
    23              1                          2         spi_vif_driver.MOSI=stim_seq_item.MOSI;
    24              1                          2         gold_vif_driver.MOSI_gold=stim_seq_item.MOSI;
    25                                                   //
    26              1                          2         spi_vif_driver.SS_n=stim_seq_item.SS_n;
    27              1                          2         gold_vif_driver.SS_n_gold=stim_seq_item.SS_n;
    28                                                   //
    29              1                          2         spi_vif_driver.rst_n=stim_seq_item.rst_n;
    30              1                          2         gold_vif_driver.rst_n_gold=stim_seq_item.rst_n;
    31                                                   //
    32              1                          2         @(negedge spi_vif_driver.clk);
    33              1                          1         seq_item_port.item_done();
    34              1                    ***0***         `uvm_info("run_phase",stim_seq_item.convert2string(),UVM_HIGH)


=================================================================================
=== Instance: /spi_sequencer_pkg
=== Design Unit: work.spi_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /spi_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.sv
    1                                                package spi_sequencer_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequence_item_pkg::*;
    5                                                class spi_sequencer extends uvm_sequencer #(spi_sequence_item);
    6               1                    ***0***         `uvm_component_utils(spi_sequencer)
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                
    9                                                    function new(string name="spi_sequencer",uvm_component parent=null);
    10              1                          1          super.new(name,parent);


=================================================================================
=== Instance: /spi_agent_pkg
=== Design Unit: work.spi_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /spi_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***             if(!uvm_config_db #(spi_config)::get(this , "" , "CFG" , spi_cfg))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***             `uvm_fatal("build_phase" , "Unable to get configuration object in agent component")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        15         3    83.33%

================================Statement Details================================

Statement Coverage for instance /spi_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
    1                                                package spi_agent_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_sequencer_pkg::*;
    5                                                import spi_driver_pkg::*;
    6                                                import spi_monitor_Pkg::*;
    7                                                import spi_config_pkg::*;
    8                                                import spi_sequence_item_pkg::*;
    9                                                class spi_agent extends uvm_agent;
    10              1                    ***0***         `uvm_component_utils(spi_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                                   spi_sequencer sqr;
    12                                                   spi_driver drv;
    13                                                   spi_monitor mon;
    14                                                   spi_config spi_cfg;
    15                                               
    16                                                   uvm_analysis_port #(spi_sequence_item) agt_ap;
    17                                               
    18                                                   function new(string name = "spi_agent",uvm_component parent = null);
    19              1                          1             super.new(name,parent);
    20                                                   endfunction
    21                                               
    22                                                   function void build_phase(uvm_phase phase);
    23              1                          1             super.build_phase(phase);
    24                                                       
    25              1                          1             spi_cfg=spi_config::type_id::create("spi_cfg",this);
    26                                                       if(!uvm_config_db #(spi_config)::get(this , "" , "CFG" , spi_cfg))
    27              1                    ***0***             `uvm_fatal("build_phase" , "Unable to get configuration object in agent component")
    28                                                       //
    29              1                          1             sqr = spi_sequencer::type_id::create("sqr",this);
    30              1                          1             drv = spi_driver::type_id::create("drv",this);
    31              1                          1             mon = spi_monitor::type_id::create("mon",this);
    32              1                          1             agt_ap = new("agt_ap",this);
    33                                                   endfunction
    34                                               
    35                                                   function void connect_phase(uvm_phase phase);
    36              1                          1         super.connect_phase(phase);
    37              1                          1             mon.mon_ap.connect(agt_ap);
    38              1                          1             drv.spi_vif_driver=spi_cfg.spi_vif_config;
    39              1                          1             drv.gold_vif_driver=spi_cfg.gold_vif_config;
    40                                                       //
    41              1                          1             mon.spi_vif_monitor=spi_cfg.spi_vif_config;
    42              1                          1             mon.gold_vif_monitor=spi_cfg.gold_vif_config;
    43              1                          1             drv.seq_item_port.connect(sqr.seq_item_export);


=================================================================================
=== Instance: /spi_env_pkg
=== Design Unit: work.spi_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /spi_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File env.sv
    1                                                package spi_env_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_agent_pkg::*;
    5                                                import spi_scoreboard_pkg::*;
    6                                                import spi_coverage_collector_pkg::*;
    7                                                class spi_env extends uvm_env;
    8               1                    ***0***      `uvm_component_utils(spi_env)
    8               2                    ***0***     
    8               3                          2     
    9                                                 spi_agent agt;
    10                                                spi_scoreboard sb;
    11                                                spi_coverage_collector cov;
    12                                                function new (string name="spi_env",uvm_component parent= null);
    13              1                          1         super.new(name,parent);
    14                                                endfunction
    15                                                   
    16                                                   function void build_phase(uvm_phase phase);
    17                                               
    18              1                          1            super.build_phase(phase);
    19              1                          1            agt = spi_agent::type_id::create("agt",this);
    20              1                          1            sb = spi_scoreboard::type_id::create("sb",this);
    21              1                          1            cov = spi_coverage_collector::type_id::create("cov",this);
    22                                                   endfunction : build_phase
    23                                               
    24                                               
    25                                                   function void connect_phase(uvm_phase phase);
    26              1                          1           agt.agt_ap.connect(sb.sb_export);
    27              1                          1           agt.agt_ap.connect(cov.cov_export);
    28              1                          1           sb.gold_vif_sb=agt.mon.gold_vif_monitor;


=================================================================================
=== Instance: /spi_test_pkg
=== Design Unit: work.spi_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        32         5        27    15.62%

================================Branch Details================================

Branch Coverage for instance /spi_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
------------------------------------IF Branch------------------------------------
    37                                         1     Count coming in to IF
    37              1                    ***0***             if(!uvm_config_db #(virtual spi_inter)::get(this,"","SPI_IF",spi_cfg.spi_vif_config))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    38                                   ***0***     Count coming in to IF
    38              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual interface of the SPI from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                    ***0***             if(!uvm_config_db #(virtual golden_inter_ref)::get(this,"","GOLDEN_IF",spi_cfg.gold_vif_config))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    41                                   ***0***     Count coming in to IF
    41              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual golden interface of the SPI from the uvm_config_db")
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    53                                         1     Count coming in to IF
    53              1                          1         `uvm_info("run_phase","wradd_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    61                                   ***0***     Count coming in to IF
    61              1                    ***0***         `uvm_info("run_phase","wradd_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    63                                   ***0***     Count coming in to IF
    63              1                    ***0***         `uvm_info("run_phase","wrdata_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    71                                   ***0***     Count coming in to IF
    71              1                    ***0***         `uvm_info("run_phase","wrdata_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    73                                   ***0***     Count coming in to IF
    73              1                    ***0***         `uvm_info("run_phase","rdadd_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    81                                   ***0***     Count coming in to IF
    81              1                    ***0***         `uvm_info("run_phase","rdadd_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    83                                   ***0***     Count coming in to IF
    83              1                    ***0***         `uvm_info("run_phase","rddata_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    91                                   ***0***     Count coming in to IF
    91              1                    ***0***         `uvm_info("run_phase","rddata_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    93                                   ***0***     Count coming in to IF
    93              1                    ***0***         `uvm_info("run_phase","rndall_asserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    95                                   ***0***     Count coming in to IF
    95              1                    ***0***         `uvm_info("run_phase","rndall_deasserted",UVM_LOW)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      65        19        46    29.23%

================================Statement Details================================

Statement Coverage for instance /spi_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
    1                                                package spi_test_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import spi_env_pkg::*;
    5                                                import spi_config_pkg::*;
    6                                                import spi_sequence_pkg::*;
    7                                                import spi_agent_pkg::*;
    8                                                class spi_test extends uvm_test;
    9               1                    ***0***         `uvm_component_utils(spi_test)
    9               2                    ***0***     
    9               3                          4     
    10                                               
    11                                                  
    12                                                   spi_env env;
    13                                                   spi_config spi_cfg;
    14                                                   virtual spi_inter spi_vif_test;
    15                                                   virtual golden_inter_ref gold_vif_test;
    16                                                   spi_reset_sequence reset_seq;
    17                                                   spi_MOSI_LOW_sequence mslw_seq;
    18                                                   spi_MOSI_HIGH_sequence mshi_seq;
    19                                                   spi_MOSI_RND_sequence msrd_seq;
    20                                                   spi_rand_all_sequence rnd_seq;
    21                                                   spi_finish_frame_sequence fnsh_frm_seq;
    22                                                   function new(string name="spi_test",uvm_component parent=null);
    23              1                          1             super.new(name,parent);
    24                                                   endfunction
    25                                               
    26                                                   function void build_phase(uvm_phase phase);
    27              1                          1             super.build_phase(phase);
    28              1                          1             env=spi_env::type_id::create("env",this);
    29              1                          1             spi_cfg=spi_config::type_id::create("spi_cfg",this);
    30              1                          1             reset_seq=spi_reset_sequence::type_id::create("reset_seq",this);
    31              1                          1             mslw_seq=spi_MOSI_LOW_sequence::type_id::create("mslw_seq",this);
    32              1                          1             mshi_seq=spi_MOSI_HIGH_sequence::type_id::create("mshi_seq",this);
    33              1                          1             msrd_seq=spi_MOSI_RND_sequence::type_id::create("msrd_seq",this);
    34              1                          1             rnd_seq=spi_rand_all_sequence::type_id::create("rnd_seq",this);
    35              1                          1             fnsh_frm_seq=spi_finish_frame_sequence::type_id::create("fnsh_frm_seq",this);
    36                                               
    37                                                       if(!uvm_config_db #(virtual spi_inter)::get(this,"","SPI_IF",spi_cfg.spi_vif_config))
    38              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual interface of the SPI from the uvm_config_db")
    39                                                       
    40                                                       if(!uvm_config_db #(virtual golden_inter_ref)::get(this,"","GOLDEN_IF",spi_cfg.gold_vif_config))
    41              1                    ***0***             `uvm_fatal("build_phase","Test - Unable to get the virtual golden interface of the SPI from the uvm_config_db")
    42              1                          1             uvm_config_db #(spi_config)::set(this,"*","CFG",spi_cfg);
    43                                                   endfunction
    44                                               
    45                                               
    46                                                   task run_phase(uvm_phase phase);
    47              1                          1         super.run_phase(phase);
    48              1                          1         phase.raise_objection(this);
    49              1                          1         `uvm_info("run_phase","reset_deasserted",UVM_LOW)
    50              1                          1         reset_seq.start(env.agt.sqr);
    51              1                          1         `uvm_info("run_phase","reset_asserted",UVM_LOW)
    52              1                    ***0***      repeat(10)begin
    53              1                          1         `uvm_info("run_phase","wradd_asserted",UVM_LOW)
    54              1                          1         mslw_seq.start(env.agt.sqr);
    55              1                    ***0***         mslw_seq.start(env.agt.sqr);
    56              1                    ***0***         mslw_seq.start(env.agt.sqr);
    57              1                    ***0***         mslw_seq.start(env.agt.sqr);
    58              1                    ***0***        repeat(10)begin
    59              1                    ***0***         msrd_seq.start(env.agt.sqr);
    60                                                  end
    61              1                    ***0***         `uvm_info("run_phase","wradd_deasserted",UVM_LOW)
    62              1                    ***0***         fnsh_frm_seq.start(env.agt.sqr);
    63              1                    ***0***         `uvm_info("run_phase","wrdata_asserted",UVM_LOW)
    64              1                    ***0***          mslw_seq.start(env.agt.sqr);
    65              1                    ***0***         mslw_seq.start(env.agt.sqr);
    66              1                    ***0***         mslw_seq.start(env.agt.sqr);
    67              1                    ***0***         mshi_seq.start(env.agt.sqr);
    68              1                    ***0***        repeat(10)begin
    69              1                    ***0***         msrd_seq.start(env.agt.sqr);
    70                                                  end
    71              1                    ***0***         `uvm_info("run_phase","wrdata_deasserted",UVM_LOW)
    72              1                    ***0***     fnsh_frm_seq.start(env.agt.sqr);
    73              1                    ***0***         `uvm_info("run_phase","rdadd_asserted",UVM_LOW)
    74              1                    ***0***        mslw_seq.start(env.agt.sqr);
    75              1                    ***0***         mshi_seq.start(env.agt.sqr);
    76              1                    ***0***         mshi_seq.start(env.agt.sqr);
    77              1                    ***0***         mslw_seq.start(env.agt.sqr);
    78              1                    ***0***        repeat(10)begin
    79              1                    ***0***         msrd_seq.start(env.agt.sqr);
    80                                                  end
    81              1                    ***0***         `uvm_info("run_phase","rdadd_deasserted",UVM_LOW)
    82              1                    ***0***     fnsh_frm_seq.start(env.agt.sqr);
    83              1                    ***0***         `uvm_info("run_phase","rddata_asserted",UVM_LOW)
    84              1                    ***0***         mslw_seq.start(env.agt.sqr);
    85              1                    ***0***         mshi_seq.start(env.agt.sqr);
    86              1                    ***0***         mshi_seq.start(env.agt.sqr);
    87              1                    ***0***         mshi_seq.start(env.agt.sqr);
    88              1                    ***0***        repeat(18)begin
    89              1                    ***0***         msrd_seq.start(env.agt.sqr);
    90                                                  end
    91              1                    ***0***         `uvm_info("run_phase","rddata_deasserted",UVM_LOW)
    92              1                    ***0***     fnsh_frm_seq.start(env.agt.sqr);end
    93              1                    ***0***         `uvm_info("run_phase","rndall_asserted",UVM_LOW)
    94              1                    ***0***         rnd_seq.start(env.agt.sqr);
    95              1                    ***0***         `uvm_info("run_phase","rndall_deasserted",UVM_LOW)
    96              1                    ***0***         fnsh_frm_seq.start(env.agt.sqr);
    97              1                    ***0***         repeat(10)begin
    98              1                    ***0***             reset_seq.start(env.agt.sqr);
    99                                                   end
    100             1                    ***0***         phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /spi_coverage_collector_pkg/spi_coverage_collector/cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                     8          8          -                      
    missing/total bins:                                     0          8          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint MISO                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         723          1          -    Covered              
        bin ones                                           32          1          -    Covered              
    Coverpoint SS_N                                   100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                         688          1          -    Covered              
        bin ones                                          104          1          -    Covered              
    Coverpoint RESET                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin zeros                                          17          1          -    Covered              
        bin ones                                          775          1          -    Covered              
    Cross #cross__0#                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <ones,ones>                                 6          1          -    Covered              
            bin <zeros,ones>                               92          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin ss_n_high                          657                     -    Occurred             

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top_uvm/DUT/cover__assertion2           SPI_Wrapper Verilog  SVA  SPI_WRAPPER.sv(34)
                                                                               426 Covered   
/top_uvm/DUT/cover__assertion1           SPI_Wrapper Verilog  SVA  SPI_WRAPPER.sv(33)
                                                                                 9 Covered   
/top_uvm/DUT/R/cover__assertion3         SPI_RAM Verilog  SVA  SPI_RAM.sv(61)    11 Covered   
/top_uvm/DUT/R/cover__assertion2         SPI_RAM Verilog  SVA  SPI_RAM.sv(60)    17 Covered   
/top_uvm/DUT/R/cover__assertion1         SPI_RAM Verilog  SVA  SPI_RAM.sv(59)    11 Covered   
/top_uvm/DUT/S/cover__assertion9         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(214)
                                                                                25 Covered   
/top_uvm/DUT/S/cover__assertion8         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(213)
                                                                                 3 Covered   
/top_uvm/DUT/S/cover__assertion7         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(212)
                                                                                22 Covered   
/top_uvm/DUT/S/cover__assertion6         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(211)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion5         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(210)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion4         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(209)
                                                                                88 Covered   
/top_uvm/DUT/S/cover__assertion3         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(208)
                                                                                 9 Covered   
/top_uvm/DUT/S/cover__assertion2         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(207)
                                                                                40 Covered   
/top_uvm/DUT/S/cover__assertion1         SPI_SLAVE Verilog  SVA  SPI_SLAVE.sv(206)
                                                                               477 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 14

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top_uvm/DUT/assert__assertion2
                     SPI_WRAPPER.sv(30)                 0          1
/top_uvm/DUT/assert__assertion1
                     SPI_WRAPPER.sv(29)                 0          1
/top_uvm/DUT/R/assert__assertion3
                     SPI_RAM.sv(57)                     0          1
/top_uvm/DUT/R/assert__assertion2
                     SPI_RAM.sv(56)                     0          1
/top_uvm/DUT/R/assert__assertion1
                     SPI_RAM.sv(55)                     0          1
/top_uvm/DUT/S/assert__assertion9
                     SPI_SLAVE.sv(205)                  0          1
/top_uvm/DUT/S/assert__assertion8
                     SPI_SLAVE.sv(204)                  0          1
/top_uvm/DUT/S/assert__assertion7
                     SPI_SLAVE.sv(203)                  0          1
/top_uvm/DUT/S/assert__assertion6
                     SPI_SLAVE.sv(202)                  0          1
/top_uvm/DUT/S/assert__assertion5
                     SPI_SLAVE.sv(201)                  0          1
/top_uvm/DUT/S/assert__assertion4
                     SPI_SLAVE.sv(200)                  0          1
/top_uvm/DUT/S/assert__assertion3
                     SPI_SLAVE.sv(199)                  0          1
/top_uvm/DUT/S/assert__assertion2
                     SPI_SLAVE.sv(198)                  0          1
/top_uvm/DUT/S/assert__assertion1
                     SPI_SLAVE.sv(197)                  0          1
/spi_sequence_pkg/spi_rand_all_sequence/body/#ublk#33705031#104/immed__108
                     sequence.sv(108)                   0          1

Total Coverage By Instance (filtered view): 72.87%

